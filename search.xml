<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JAVA程序设计-JDK安装及环境配置</title>
      <link href="/2019/08/29/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1-JDK%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/08/29/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1-JDK%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="JDK的安装"><a href="#JDK的安装" class="headerlink" title="JDK的安装"></a>JDK的安装</h3><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><p>打开<a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">JDK下载</a></p><blockquote><p>找到要下载的版本和对应的操作系统，点击下载</p></blockquote><p><img src="../../../../imgs/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JDK%E5%AE%89%E8%A3%85/JDK%E5%AE%89%E8%A3%851.png" alt="下载演示"></p><h5 id="安装（傻瓜式）"><a href="#安装（傻瓜式）" class="headerlink" title="安装（傻瓜式）"></a>安装（傻瓜式）</h5><blockquote><p>安装目录可自定义</p></blockquote><p><img src="../../../../imgs/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JDK%E5%AE%89%E8%A3%85/JDK%E5%AE%89%E8%A3%852.png" alt="安装演示"></p><h5 id="Win系统下JAVA环境变量的配置"><a href="#Win系统下JAVA环境变量的配置" class="headerlink" title="Win系统下JAVA环境变量的配置"></a>Win系统下JAVA环境变量的配置</h5><blockquote><p>安装好JDK后我们还需要配置环境变量</p><ul><li>单击Win按键，也就是打开左下角菜单，输入高级设置，会出现查看系统高级设置，点击进去。也可以打开计算机，右键选择属性，然后系统高级设置</li><li>点击环境变量，在<strong>系统变量</strong>下新建变量JAVA_HOME，变量值为JDK安装路径。再新建CLASSPATH变量，变量值为<strong>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tool.jar</strong>注意前面有一点</li></ul></blockquote><p><img src="../../../../imgs/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JDK%E5%AE%89%E8%A3%85/JDK%E5%AE%89%E8%A3%853.png" alt="新建系统环境变量"><br><img src="../../../../imgs/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JDK%E5%AE%89%E8%A3%85/JDK%E5%AE%89%E8%A3%854.png" alt="新建系统环境变量"></p><blockquote><p>在path中添加环境变量</p><ul><li>将%JAVA_HOME%\bin和%CLASSPATH%变量添加到path中</li></ul></blockquote><p><img src="../../../../imgs/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JDK%E5%AE%89%E8%A3%85/JDK%E5%AE%89%E8%A3%855.png" alt="在path中添加环境变量"></p><h5 id="检验是否安装成功"><a href="#检验是否安装成功" class="headerlink" title="检验是否安装成功"></a>检验是否安装成功</h5><blockquote><p>打开cmd，输入java，显示详细信息，输入javac，显示详细信息则表示配置成功</p></blockquote><p><img src="../../../../imgs/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JDK%E5%AE%89%E8%A3%85/JDK%E5%AE%89%E8%A3%856-1.png" alt="检验安装"><br><img src="../../../../imgs/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JDK%E5%AE%89%E8%A3%85/JDK%E5%AE%89%E8%A3%856-2.png" alt="检验安装"></p>]]></content>
      
      
      <categories>
          
          <category> JAVA程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象 </tag>
            
            <tag> JAVA学习 </tag>
            
            <tag> JDK安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法与数据结构-第一章</title>
      <link href="/2019/08/27/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2019/08/27/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是数据结构"><a href="#什么是数据结构" class="headerlink" title="什么是数据结构"></a>什么是数据结构</h3>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript监听事件</title>
      <link href="/2019/07/16/JavaScript%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6/"/>
      <url>/2019/07/16/JavaScript%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="事件的概念："><a href="#事件的概念：" class="headerlink" title="事件的概念："></a>事件的概念：</h3><p>JavaScript使我们有能力创建动态页面，网页中的每一个元素都可以产生某些触发JavaScript函数的事件。我们可以认为事件是可以被JavaScript侦测到的一种行为。</p><h3 id="事件流："><a href="#事件流：" class="headerlink" title="事件流："></a>事件流：</h3><p>事件流主要分为冒泡型事件和捕获型事件。IE浏览器目前只支持冒泡型事件，而支持标准DOM的浏览器比如火狐、Chrome等两者都支持。</p><h3 id="使用返回值改变HTML元素的默认行为："><a href="#使用返回值改变HTML元素的默认行为：" class="headerlink" title="使用返回值改变HTML元素的默认行为："></a>使用返回值改变HTML元素的默认行为：</h3><p>HTML元素大都包含了自己的默认行为，例如：超链接、提交按钮等。我们可以通过在绑定事件中加上”return false”来阻止它的默认行为。</p><p><img src="../../../../imgs/jiantin.png" alt="jiantin"></p><h3 id="通用性的事件监听方法："><a href="#通用性的事件监听方法：" class="headerlink" title="通用性的事件监听方法："></a>通用性的事件监听方法：</h3><ol><li>绑定HTML元素属性：</li></ol><p>　　　<code>&lt;input type=&quot;button&quot; value=&quot;clickMe&quot; onclick=&quot;check(this)&quot;&gt;</code></p><ol start="2"><li>绑定DOM对象属性：</li></ol><p>　　　<code>document.getElementById(&quot;xxx&quot;).onclick=test;</code></p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>JavaScript两种通用性的绑定事件的方式<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>            <span class="token keyword">function</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"绑定HTML元素属性"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"绑定DOM对象属性"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>return false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>百度<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>超链接有自己的默认行为，即当点击的时候会跳转页面。若是要把默认行为给去掉，可以绑定一个onclick事件，        onclick<span class="token operator">=</span><span class="token string">"return false"</span>。这样点击就不会跳转页面了。<span class="token operator">--</span><span class="token operator">></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>测试1<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test1()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span></span>测试<span class="token number">2</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>onclick<span class="token operator">=</span>test2<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//此处不能加括号，加了括号表示调用函数。</span>            <span class="token comment" spellcheck="true">/*注意：函数需要通过后面的触发才会调用执行，而上面这句没有放在函数里面，JavaScript从上往下解析的时候，解析到上面的那句代码，　　　　　　　　若还没有解析到&lt;body>中的id--test2,就会报错。故JavaScript代码要放在后面。*/</span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
